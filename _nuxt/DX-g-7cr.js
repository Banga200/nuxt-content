import{I as C,u as N,J as M,K as j,L as H,M as U,b as V,N as R,O as F,P as L,Q as z,H as p,R as I,S as G,U as J,V as Q,e as W,D as q}from"./RGKhTMCl.js";const X={trailing:!0};function Y(a,e=25,r={}){if(r={...X,...r},!Number.isFinite(e))throw new TypeError("Expected `wait` to be a finite number");let i,s,n=[],t,v;const d=(D,c)=>(t=Z(a,D,c),t.finally(()=>{if(t=null,r.trailing&&v&&!s){const f=d(D,v);return v=null,f}}),t);return function(...D){return t?(r.trailing&&(v=D),t):new Promise(c=>{const f=!s&&r.leading;clearTimeout(s),s=setTimeout(()=>{s=null;const m=r.leading?i:d(this,D);for(const y of n)y(m);n=[]},e),f?(i=d(this,D),c(i)):n.push(c)})}}async function Z(a,e,r){return await a.apply(e,r)}const $=Symbol.for("nuxt:client-only");function aa(...a){const e=typeof a[a.length-1]=="string"?a.pop():void 0;x(a[0],a[1])&&a.unshift(e);let[r,i,s={}]=a;const n=C(()=>G(r));if(typeof n.value!="string")throw new TypeError("[nuxt] [useAsyncData] key must be a string.");if(typeof i!="function")throw new TypeError("[nuxt] [useAsyncData] handler must be a function.");const t=N();s.server??=!0,s.default??=k,s.getCachedData??=B,s.lazy??=!1,s.immediate??=!0,s.deep??=M.deep,s.dedupe??="cancel",s._functionName,t._asyncData[n.value];const v={cause:"initial",dedupe:s.dedupe};t._asyncData[n.value]?._init||(v.cachedData=s.getCachedData(n.value,t,{cause:"initial"}),t._asyncData[n.value]=E(t,n.value,i,s,v.cachedData));const d=t._asyncData[n.value];d._deps++;const D=()=>t._asyncData[n.value].execute(v),c=s.server!==!1&&t.payload.serverRendered;{let y=function(o){const l=t._asyncData[o];l?._deps&&(l._deps--,l._deps===0&&l?._off())};const u=J();if(u&&c&&s.immediate&&!u.sp&&(u.sp=[]),u&&!u._nuxtOnBeforeMountCbs){u._nuxtOnBeforeMountCbs=[];const o=u._nuxtOnBeforeMountCbs;Q(()=>{o.forEach(l=>{l()}),o.splice(0,o.length)}),W(()=>o.splice(0,o.length))}const g=u&&(u._nuxtClientOnly||q($,!1));c&&t.isHydrating&&(d.error.value||d.data.value!==void 0)?d.status.value=d.error.value?"error":"success":u&&(!g&&t.payload.serverRendered&&t.isHydrating||s.lazy)&&s.immediate?u._nuxtOnBeforeMountCbs.push(D):s.immediate&&d.status.value!=="success"&&D();const _=I(),h=j([n,...s.watch||[]],([o],[l])=>{if((o||l)&&o!==l){const w=t._asyncData[l]?.data.value!==void 0,T=t._asyncDataPromises[l]!==void 0;l&&y(l);const O={cause:"initial",dedupe:s.dedupe};if(!t._asyncData[o]?._init){let P;l&&w?P=t._asyncData[l]?.data.value:(P=s.getCachedData(o,t,{cause:"initial"}),O.cachedData=P),t._asyncData[o]=E(t,o,i,s,P)}t._asyncData[o]._deps++,(s.immediate||w||T)&&t._asyncData[o].execute(O)}else d._execute({cause:"watch",dedupe:s.dedupe})},{flush:"sync"});_&&H(()=>{h(),y(n.value)})}const f={data:b(()=>t._asyncData[n.value]?.data),pending:b(()=>t._asyncData[n.value]?.pending),status:b(()=>t._asyncData[n.value]?.status),error:b(()=>t._asyncData[n.value]?.error),refresh:(...y)=>t._asyncData[n.value].execute(...y),execute:(...y)=>t._asyncData[n.value].execute(...y),clear:()=>S(t,n.value)},m=Promise.resolve(t._asyncDataPromises[n.value]).then(()=>f);return Object.assign(m,f),m}function b(a){return C({get(){return a()?.value},set(e){const r=a();r&&(r.value=e)}})}function x(a,e){return!(typeof a=="string"||typeof a=="object"&&a!==null||typeof a=="function"&&typeof e=="function")}async function ea(a){await new Promise(r=>U(r)),await N().hooks.callHookParallel("app:data:refresh",void 0)}function S(a,e){e in a.payload.data&&(a.payload.data[e]=void 0),e in a.payload._errors&&(a.payload._errors[e]=void 0),a._asyncData[e]&&(a._asyncData[e].data.value=p(a._asyncData[e]._default()),a._asyncData[e].error.value=void 0,a._asyncData[e].status.value="idle"),e in a._asyncDataPromises&&(a._asyncDataPromises[e]&&(a._asyncDataPromises[e].cancelled=!0),a._asyncDataPromises[e]=void 0)}function K(a,e){const r={};for(const i of e)r[i]=a[i];return r}function E(a,e,r,i,s){a.payload._errors[e]??=void 0;const n=i.getCachedData!==B,t=r,v=i.deep?V:R,d=s!==void 0,D=a.hook("app:data:refresh",async f=>{(!f||f.includes(e))&&await c.execute({cause:"refresh:hook"})}),c={data:v(d?s:i.default()),pending:C(()=>c.status.value==="pending"),error:F(a.payload._errors,e),status:R("idle"),execute:(...f)=>{const[m,y=void 0]=f,u=m&&y===void 0&&typeof m=="object"?m:{};if(a._asyncDataPromises[e]){if((u.dedupe??i.dedupe)==="defer")return a._asyncDataPromises[e];a._asyncDataPromises[e].cancelled=!0}{const _="cachedData"in u?u.cachedData:i.getCachedData(e,a,{cause:u.cause??"refresh:manual"});if(_!==void 0)return a.payload.data[e]=c.data.value=_,c.error.value=void 0,c.status.value="success",Promise.resolve(_)}c.status.value="pending";const g=new Promise((_,h)=>{try{_(t(a))}catch(o){h(o)}}).then(async _=>{if(g.cancelled)return a._asyncDataPromises[e];let h=_;i.transform&&(h=await i.transform(_)),i.pick&&(h=K(h,i.pick)),a.payload.data[e]=h,c.data.value=h,c.error.value=void 0,c.status.value="success"}).catch(_=>{if(g.cancelled)return a._asyncDataPromises[e];c.error.value=z(_),c.data.value=p(i.default()),c.status.value="error"}).finally(()=>{g.cancelled||delete a._asyncDataPromises[e]});return a._asyncDataPromises[e]=g,a._asyncDataPromises[e]},_execute:Y((...f)=>c.execute(...f),0,{leading:!0}),_default:i.default,_deps:0,_init:!0,_hash:void 0,_off:()=>{D(),a._asyncData[e]?._init&&(a._asyncData[e]._init=!1),n||L(()=>{a._asyncData[e]?._init||(S(a,e),c.execute=()=>Promise.resolve())})}};return c}const k=()=>{},B=(a,e,r)=>{if(e.isHydrating)return e.payload.data[a];if(r.cause!=="refresh:manual"&&r.cause!=="refresh:hook")return e.static.data[a]};export{ea as r,aa as u};
